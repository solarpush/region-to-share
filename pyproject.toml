[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "region-to-share"
version = "1.0.5"
description = "Real-time screen region capture and sharing for GNOME Wayland"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Pierre Nicolas", email = "pierre@lpdjs.fr"}
]
maintainers = [
    {name = "Pierre Nicolas", email = "pierre@lpdjs.fr"}
]
keywords = [
    "screen-capture",
    "wayland", 
    "gnome",
    "pipewire",
    "video-conferencing",
    "real-time"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
    "Topic :: Communications :: Video Conferencing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX :: Linux",
    "Environment :: X11 Applications :: Qt",
    "Environment :: Wayland",
]
requires-python = ">=3.10"
dependencies = [
    "PyQt5>=5.15.0",
    "mss>=10.0.0",
    "dbus-python>=1.3.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "wheel>=0.40.0",
    "twine>=4.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.scripts]
region-to-share = "region_to_share.main:main"

[project.urls]
"Homepage" = "https://github.com/solarpush/region-to-share"
"Bug Reports" = "https://github.com/solarpush/region-to-share/issues"
"Source" = "https://github.com/solarpush/region-to-share"
"Documentation" = "https://github.com/solarpush/region-to-share/blob/main/README.md"

[tool.setuptools]
packages = ["region_to_share"]
include-package-data = true

[tool.setuptools.package-data]
region_to_share = ["*.png", "*.svg", "*.desktop"]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dbus.*",
    "gi.*",
    "cv2.*",
    "mss.*",
    "pycairo.*",
]
ignore_missing_imports = true
