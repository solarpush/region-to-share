name: region-to-share
base: core22
version: '1.0.5'
summary: Share selected screen regions - perfect for ultrawide screens
description: |
  Region-to-Share allows you to select a specific area of your screen
  and display it in a window that you can share directly 
  in your video conferencing applications (Google Meet, Teams, Discord, etc.).

  Features:
  - Interactive screen region selection (Wayland has blank screen issue)
  - Real-time display window (target 30 FPS)
  - Wayland via xdg-desktop-portal/PipeWire (>=1.0.5)
  - X11 via MSS
  - Pause/resume capture
  - Auto update on screen changes

grade: stable
confinement: strict

website: https://github.com/solarpush/region-to-share/blob/main/README.md
issues: https://github.com/solarpush/region-to-share/issues
source-code: https://github.com/solarpush/region-to-share
donation:
  - https://coff.ee/solarpush

architectures:
  - build-on: amd64

apps:
  region-to-share:
    command: bin/region-to-share
    desktop: usr/share/applications/region-to-share.desktop
    extensions: [gnome]   # gnome-42 runtime on core22
    plugs:
      - desktop                # portals access
      - wayland                # Wayland socket
      - x11                    # optional fallback on X11
      - screen-inhibit-control
      - home
      - network
    environment:
      # Prefer Wayland, fall back to X11 if needed
      QT_QPA_PLATFORM: "wayland;xcb"
      QTWEBENGINE_DISABLE_SANDBOX: "1"

parts:
  region-to-share:
    plugin: python
    source: .
    source-type: local
    python-packages:
      - PyQt5==5.15.11
      - numpy==2.2.6
      - dbus-python==1.3.2
      - mss==10.0.0
      - opencv-python-headless==4.12.0.88
      - pycairo
      - Pillow
      - pyscreenshot
      - python-xlib
      - six
    build-packages:
      - python3-dev
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - pkg-config
      - libdbus-1-dev
      - libdbus-glib-1-dev
      - libx11-dev
      - libxext-dev
      - libxrandr-dev
      - libxss-dev
      - libqt5x11extras5-dev
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libgirepository1.0-dev
      - libglib2.0-dev
      - libcairo2-dev
    stage-packages:
      # Python runtime
      - python3
      - python3-gi
      - python3-gi-cairo
      - python3-dbus

      # PipeWire client (daemon provided by host)
      - libpipewire-0.3-0

      # GStreamer (keep minimal; add good/bad/ugly only if required)
      - libgstreamer1.0-0
      - gstreamer1.0-plugins-base
      - gstreamer1.0-plugins-good
      
      # GStreamer PipeWire plugin - ESSENTIEL pour pipewiresrc
      - gstreamer1.0-pipewire

      # Qt5 for PyQt5
      - libqt5core5a
      - libqt5gui5
      - libqt5widgets5
      - libqt5x11extras5
      - libqt5dbus5
      - qt5-gtk-platformtheme

      # GObject Introspection (dbus-python/gi)
      - gir1.2-gtk-3.0
      - gir1.2-glib-2.0
      - gir1.2-gstreamer-1.0
      - gir1.2-gst-plugins-base-1.0
      - libgirepository-1.0-1

      # System deps X11/Wayland
      - libx11-6
      - libxrandr2
      - libxss1
      - libwayland-client0
      - libxcb-xinerama0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-xkb1
    override-pull: |
      craftctl default
      rm -rf $CRAFT_PART_SRC/venv_region* || true
      find $CRAFT_PART_SRC -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
      find $CRAFT_PART_SRC -name "*.pyc" -delete 2>/dev/null || true
    override-build: |
      craftctl default

      # Install package code into the snap's Python path
      mkdir -p $CRAFT_PART_INSTALL/lib/python3.10/site-packages/region_to_share
      cp -r region_to_share/* $CRAFT_PART_INSTALL/lib/python3.10/site-packages/region_to_share/

      # Runtime launcher
      mkdir -p $CRAFT_PART_INSTALL/bin
      cat > $CRAFT_PART_INSTALL/bin/region-to-share << 'SCRIPT_EOF'
      #!/bin/bash
      export PYTHONPATH="$SNAP/lib/python3.10/site-packages:$SNAP/usr/lib/python3/dist-packages:$PYTHONPATH"
      export QT_PLUGIN_PATH="$SNAP/lib/python3.10/site-packages/PyQt5/Qt5/plugins:$SNAP/usr/lib/x86_64-linux-gnu/qt5/plugins"
      export QT_QPA_PLATFORM_PLUGIN_PATH="$SNAP/lib/python3.10/site-packages/PyQt5/Qt5/plugins/platforms:$SNAP/usr/lib/x86_64-linux-gnu/qt5/plugins/platforms"
      export LD_LIBRARY_PATH="$SNAP/lib/python3.10/site-packages/PyQt5/Qt5/lib:$SNAP/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
      export QT_XKB_CONFIG_ROOT="$SNAP/usr/share/X11/xkb"
      export GST_PLUGIN_PATH="$SNAP/usr/lib/x86_64-linux-gnu/gstreamer-1.0:$GST_PLUGIN_PATH"
      export GST_PLUGIN_SYSTEM_PATH="$SNAP/usr/lib/x86_64-linux-gnu/gstreamer-1.0"
      export GI_TYPELIB_PATH="$SNAP/usr/lib/x86_64-linux-gnu/girepository-1.0:$SNAP/usr/lib/girepository-1.0:$GI_TYPELIB_PATH"

      # Prefer Wayland, fallback X11
      if [ -z "$QT_QPA_PLATFORM" ]; then
        export QT_QPA_PLATFORM="wayland;xcb"
      fi

      cd "$SNAP"
      exec python3 -m region_to_share.main "$@"
      SCRIPT_EOF
      chmod +x $CRAFT_PART_INSTALL/bin/region-to-share

  desktop-file:
    plugin: dump
    source: .
    organize:
      region-to-share.desktop: usr/share/applications/region-to-share.desktop
      region-to-share-64.png: usr/share/icons/hicolor/64x64/apps/region-to-share.png
      region-to-share-128.png: usr/share/icons/hicolor/128x128/apps/region-to-share.png
      region-to-share-512.png: usr/share/icons/hicolor/512x512/apps/region-to-share.png
      region-to-share.svg: usr/share/icons/hicolor/scalable/apps/region-to-share.svg
      region-to-share.png: usr/share/pixmaps/region-to-share.png
